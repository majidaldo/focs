#include <stdio.h>



typedef  float nt;// number type
typedef unsigned int it; //index type

/*assuming grid is made from bottom left
2 234567
1 678901
0 012345
 
  012345
*/

typedef struct cartgrid{
  nt* u;
  it xn;  it yn;} cg;
#define xy2i(xi,yi,xn) (yi)*(xn)+(xi)
nt *up(cg *g, it *xi, it *yi){return &(g->u)[xy2i(*xi,*yi+1,g->xn)];}
nt *dn(cg *g, it *xi, it *yi){return &(g->u)[xy2i(*xi,*yi-1,g->xn)];}
nt *lf(cg *g, it *xi, it *yi){return &(g->u)[xy2i(*xi-1,*yi,g->xn)];}
nt *rt(cg *g, it *xi, it *yi){return &(g->u)[xy2i(*xi+1,*yi,g->xn)];}
#undef xy2i


typedef nt *(*fp)(nt *);

void fwddx(nt *o, cg *g, it *xi, it *yi, unsigned int dim){
bwddx
ctrdx
ctrdy

void deld(nt *o2, cg *g
	  , it *xi, it *yi
	  , ){o2[0]=}
void dot(nt o, nt *X2_1, nt *X2_2){}

void fwdd(nt *u){}


//dT/dt+v.delT= k del2T
//      upwind  ctr diff



//typedef struct vec2{ float x; float y;} vec2;

void sigma(float *o, float *v, float *dt, float *dx){
  *o=*v*(*dt)/(*dx);//dx 
}

  /*
void uwu_np1p(float *o		
	     , float *u_n_ij
	     , vec2 *v, float *dt, float *dx //sigma
	     ,float *u_n_im1j){
float sigx; sigma(&sigx, &(v->x), dt, dx);
float sigy; sigma(&sigy, &v->y, dt, dx);
*o=*u_n_ij-sigx*(*u_n_ij-*u_n_im1j)-sigy*(*u_n_ij-*u_n_ij
}
  */




int main(){

  nt us[18];us[0]=13.0;us[6]=4.0;us[1]=444;
  cg g={us, 6, 3};

  it tx=0,ty=0;
  printf("%f",*rt(&g,&tx,&ty));


}
